/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AppLayoutImport } from './routes/_app/_layout'
import { Route as AppLayoutIndexImport } from './routes/_app/_layout/index'
import { Route as AppLayoutExercisesImport } from './routes/_app/_layout/exercises'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutRoute = AppLayoutImport.update({
  id: '/_app/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutIndexRoute = AppLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutExercisesRoute = AppLayoutExercisesImport.update({
  id: '/exercises',
  path: '/exercises',
  getParentRoute: () => AppLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/_layout': {
      id: '/_app/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_app/_layout/exercises': {
      id: '/_app/_layout/exercises'
      path: '/exercises'
      fullPath: '/exercises'
      preLoaderRoute: typeof AppLayoutExercisesImport
      parentRoute: typeof AppLayoutImport
    }
    '/_app/_layout/': {
      id: '/_app/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppLayoutIndexImport
      parentRoute: typeof AppLayoutImport
    }
  }
}

// Create and export the route tree

interface AppLayoutRouteChildren {
  AppLayoutExercisesRoute: typeof AppLayoutExercisesRoute
  AppLayoutIndexRoute: typeof AppLayoutIndexRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutExercisesRoute: AppLayoutExercisesRoute,
  AppLayoutIndexRoute: AppLayoutIndexRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '': typeof AppLayoutRouteWithChildren
  '/exercises': typeof AppLayoutExercisesRoute
  '/': typeof AppLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/exercises': typeof AppLayoutExercisesRoute
  '/': typeof AppLayoutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/login': typeof LoginRoute
  '/_app/_layout': typeof AppLayoutRouteWithChildren
  '/_app/_layout/exercises': typeof AppLayoutExercisesRoute
  '/_app/_layout/': typeof AppLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '' | '/exercises' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/exercises' | '/'
  id:
    | '__root__'
    | '/login'
    | '/_app/_layout'
    | '/_app/_layout/exercises'
    | '/_app/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LoginRoute: typeof LoginRoute
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LoginRoute: LoginRoute,
  AppLayoutRoute: AppLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/login",
        "/_app/_layout"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_app/_layout": {
      "filePath": "_app/_layout.tsx",
      "children": [
        "/_app/_layout/exercises",
        "/_app/_layout/"
      ]
    },
    "/_app/_layout/exercises": {
      "filePath": "_app/_layout/exercises.tsx",
      "parent": "/_app/_layout"
    },
    "/_app/_layout/": {
      "filePath": "_app/_layout/index.tsx",
      "parent": "/_app/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
